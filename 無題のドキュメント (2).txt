以下に、**自学自習AIアプリの完全仕様書（テキスト形式）**を記載します。ファイル読み込み〜音声会話までを含むフル構成です。
________________


📘 自学自習AIアプリ 仕様書
🧩 目的と概要
* 学習者がファイルやWeb資料を読み込み、それに基づいてAIと音声でインタラクティブに「インタビュー形式」で学習を進められるアプリ。

* 回答内容に応じてAIが質問を深掘り・フィードバックを行い、対話的に理解を促進。

* 自習の質を高めるための復習・記録機能も搭載。

________________


🎯 ユースケース
   * 参考書や記事、資料を読みながら“話しながら理解する”スタイルの学習

   * 英語学習や論文理解、面接練習、補助金制度理解などへの応用

   * AI講師と対話しながら「考える力」を育てる

________________


🔧 技術構成
要素
	技術・ライブラリ
	補足
	フロントエンド
	React / Next.js / Tailwind CSS
	軽量・高速開発・柔軟UI
	UIコンポーネント
	shadcn/ui
	美しく、チャット・モーダル等が揃う
	アニメーション
	Framer Motion
	インタビューの登場感・変化演出
	アイコン
	Lucide Icons
	shadcnと親和性高
	チャット機能
	Vercel AI SDK または OpenAI Chat UI
	ストリーム出力や履歴管理に対応
	バックエンド
	Supabase（Edge Functions）
	認証・ストレージ・DB管理
	音声合成
	ElevenLabs API または Google TTS
	ナレーター音声生成
	音声認識
	Whisper API
	ユーザーの回答を文字起こし
	LLM
	GPT-4o / Claude 3.5 / Perplexity
	質問生成・会話処理用
	テキスト抽出
	LangChain / PDF.js / mammoth.js
	ファイル内容から文章抽出
	________________


🖥️ 画面構成（ページ構成）
1. /upload
      * ファイルアップロード（PDF / Word / Text / URL）

      * 抽出したテキストを表示

      * 「インタビューを開始」ボタン

2. /interview
         * AIによるインタビューが音声で再生

         * ユーザーが音声またはテキストで回答

         * AIが回答を評価・質問を継続

         * 会話は画面上にチャット形式で表示

3. /review
            * 会話ログ一覧

            * 難しかった質問・間違った内容を記録

            * 再挑戦モード（復習機能）

4. /settings
               * 声の種類（ナレーター）設定

               * 難易度（質問深さ）

               * 表示言語 / 音声スピードなど

________________


🔁 会話フロー例
                  1. ファイル「生成AIと働き方」を読み込む

                  2. AI「この文書の主張は何だと思いますか？」（音声）

                  3. ユーザーが答える（例：「AIで仕事が減るということ？」）

                  4. AI「面白いですね。では、あなた自身の仕事にどう影響しますか？」

                  5. ユーザーが答える

                  6. AIが深堀・共感・反論など含む応答を返す

________________


🔒 データ保存
                     * SupabaseのPostgreSQLに会話ログ・アップロード履歴を保存

                     * ファイルはストレージに保存（PDFなど）

                     * ユーザーの学習記録（日時・内容・理解度評価）を保存

________________


📌 機能一覧
基本機能
                        * ファイル読み込み（PDF, Word, URL）

                        * テキスト抽出・表示

                        * 質問生成（要約ベース・詳細読み込みベース）

                        * 音声でのナレーション（TTS）

                        * 音声入力（STT）

                        * 回答内容に応じた次の質問生成

                        * 会話ログ保存

                        * 難易度・音声設定

拡張機能（後日実装）
                           * マルチユーザー対応

                           * 思考マップ生成

                           * テーマ別チャレンジモード

                           * AIからの復習クイズ出題

                           * Slack連携 / LINE連携

________________


🚀 MVP構成（最小実装）
                              * /upload → PDF読み込み＋テキスト抽出

                              * /interview → GPT-4oで質問生成、ElevenLabsで読み上げ、Whisperで音声受信

                              * /review → 会話履歴のみ表示（編集不要）

________________


🎨 UI設計思想（UX）
                                 * シンプルで落ち着いた色合い（ベージュ、ライトグレー、ネイビー）

                                 * 余白を広くとるカードUI

                                 * 会話中心の体験（左にAI、右に自分）

                                 * 音声再生アイコンや話すUIは大きめに配置

                                 * AIとの会話を「ストレスなく、考えを引き出される」設計

________________


✅ 今後のステップ
                                    1. MVPのUIモックをFigmaで設計

                                    2. React + shadcn/ui によるUI構築

                                    3. ElevenLabsとWhisperの接続実装

                                    4. Supabase構成のセットアップ

________________


ご希望があれば、次は「FigmaベースのUI設計」や「コード雛形」も提供可能です。必要なパートを教えてください。